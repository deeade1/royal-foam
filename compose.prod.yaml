services:
  royal-db:
    container_name: royal-db
    image: ${POSTGRES_IMAGE:-postgres:17.4-bookworm}
    env_file:
      - .env.prod.db
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]

      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      royal-network:
        aliases:
          - database

  royal-backend:
    container_name: royal-backend
    build:
      context: ./apps/backend
    env_file:
      - .env.prod
    depends_on:
      royal-db:
        condition: service_healthy
    
    volumes:
      - media:/home/app/backend/media
      - static:/home/app/backend/static
    restart: unless-stopped
    networks:
      - royal-network

  royal-nginx:
    container_name: royal-nginx
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - media:/var/www/media
      - static:/var/www/static
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      royal-backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - royal-network

volumes:
  db-data:
  media:
  static:

networks:
  royal-network:
    driver: bridge
