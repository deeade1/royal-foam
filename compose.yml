services:
  royal-db:
    container_name: royal-db
    image: postgis/postgis:17-3.5
    ports:
      - "5433:5432"  
    env_file:
      - ./.env.dev.db
    volumes:
      - royal-db-data:/var/lib/postgresql/data
    restart: always
    networks:
      - royal-network
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'pg_isready -U $${POSTGRES_USER}'"]
      interval: 10s
      timeout: 5s
      retries: 5

  royal-backend:
    container_name: royal-backend
    build:
      context: .
      dockerfile: apps/backend/Dockerfile.dev
    depends_on:
      royal-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.development
      - PYTHONPATH=/home/apps/backend
    env_file:
      - ./.env.dev
    volumes:
      - ./apps/backend:/home/apps/backend
      - ./media:/home/apps/backend/media
      - ./static:/home/apps/backend/staticfiles
    working_dir: /home/apps/backend
    restart: unless-stopped
    networks:
      - royal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 5

  royal-nginx:
    container_name: royal-nginx
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile.dev
    ports:
      - "8080:80"
    volumes:
      - ./media:/home/apps/backend/media
      - ./static:/usr/share/nginx/html/static  
      - ./apps/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./apps/frontend/dist:/usr/share/nginx/html
    
    restart: unless-stopped
    depends_on:
      royal-backend:
        condition: service_healthy
    networks:
      - royal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  royal-db-data:
  media:
  static:

networks:
  royal-network:
    driver: bridge